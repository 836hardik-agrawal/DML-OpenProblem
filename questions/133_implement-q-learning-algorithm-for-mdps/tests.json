[
  {
    "test": "import numpy as np; np.random.seed(42); P = np.array([[[0, 1], [1, 0]], [[1, 0], [1, 0]]]); R = np.array([[1, 0], [0, 0]]); terminal_states = [1]; print(q_learning(2, 2, P, R, terminal_states, 0.1, 0.9, 0.1, 10))",
    "expected_output": "[[0.65132156, 0.052902  ],[0., 0.        ]]"
  },
  {
    "test": "import numpy as np; np.random.seed(42); P = np.array([[[0.5, 0.5], [0, 1]], [[0, 1], [1, 0]]]); R = np.array([[0.5, 1], [0, 0]]); terminal_states = [1]; print(q_learning(2, 2, P, R, terminal_states, 0.5, 0.8, 0.2, 5))",
    "expected_output": "[[0.91785477, 0.5       ],[0., 0.        ]]"
  },
  {
    "test": "import numpy as np; np.random.seed(42); P = np.array([[[1, 0], [0, 1]], [[0.5, 0.5], [0.5, 0.5]]]); R = np.array([[2, 1], [0, 0]]); terminal_states = [0]; print(q_learning(2, 2, P, R, terminal_states, 0.3, 0.7, 0.05, 20))",
    "expected_output": "[[0., 0.],[0., 0.]]"
  }
]
