[
  {
    "test": "import numpy as np; np.random.seed(42); X = np.array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]); y = np.array([[1, 0]]); print(train_simple_cnn_with_backprop(X, y, 1, 0.01, 3, 1))",
    "expected_output": "(array([[[ 0.00501739],        [-0.00128214],        [ 0.00662764]],       [[ 0.01543131],        [-0.00209028],        [-0.00203986]],       [[ 0.01614389],        [ 0.00807636],        [-0.00424248]]]), array([5.02517066e-05]), array([[ 0.00635715, -0.00556573]]), array([ 0.00499531, -0.00499531]))"
  },
  {
    "test": "import numpy as np; np.random.seed(42); X = np.array([[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[9, 8, 7], [6, 5, 4], [3, 2, 1]]]); y = np.array([[0, 1], [1, 0]]); print(train_simple_cnn_with_backprop(X, y, 2, 0.01, 3, 1))",
    "expected_output": "(array([[[ 0.00561561],        [-0.00091884],        [ 0.00675603]],       [[ 0.01532478],        [-0.00243171],        [-0.00261621]],       [[ 0.01533262],        [ 0.00703018],        [-0.00552357]]]), array([-1.80360153e-05]), array([[ 0.00561137, -0.00481995]]), array([ 3.23124658e-05, -3.23124658e-05]))"
  },
  {
    "test": "import numpy as np; np.random.seed(42); X = np.array([[[2, 3, 4], [5, 6, 7], [8, 9, 10]]]); y = np.array([[0.5, 0.5]]); print(train_simple_cnn_with_backprop(X, y, 1, 0.005, 3, 1))",
    "expected_output": "(array([[[ 0.00496708],        [-0.00138273],        [ 0.00647677]],       [[ 0.01523016],        [-0.00234171],        [-0.00234157]],       [[ 0.0157919 ],        [ 0.00767409],        [-0.00469503]]]), array([-2.85717013e-08]), array([[ 0.00542496, -0.00463354]]), array([-2.84019221e-06,  2.84019221e-06]))"
  }
]
